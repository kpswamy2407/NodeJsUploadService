var XSeries=require('./x-series');
module.exports=(sequelize,DataTypes)=>{
    const XSeriesCf=sequelize.define('XSeriesCf',{
        xtransactionseriesid:{
            type:DataTypes.INTEGER(11),
            primaryKey: true,
            
        },
        cf_xtransactionseries_cycle_frequency:{
            type:DataTypes.STRING(100),
            defaultValue:null,
        },
        cf_xtransactionseries_current_value:{
            type:DataTypes.DECIMAL(65,0),
            defaultValue:0,
        },
        cf_xtransactionseries_mark_as_default:{
            type:DataTypes.STRING(3),
            defaultValue:'0',
        },
        cf_xtransactionseries_reset_current_value:{
            type:DataTypes.STRING(3),
            defaultValue:'0',
        },
        cf_xtransactionseries_status:{
            type:DataTypes.STRING(3),
            defaultValue:'0',
        },
        cf_xtransactionseries_transaction_type:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_minimum_value:{
            type:DataTypes.INTEGER(11),
            defaultValue:null,
        },
        cf_xtransactionseries_maximum_value:{
            type:DataTypes.DECIMAL(11,0),
            defaultValue:null,
        },
        cf_xtransactionseries_scheme1:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme11:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme2:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme21:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme3:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme31:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme4:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme41:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme5:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme51:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme6:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme61:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme7:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_scheme71:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
        cf_xtransactionseries_user_id:{
            type:DataTypes.STRING(100),
            defaultValue:'',
        },
         cf_xtransactionseries_last_fetch_date:{
            type:DataTypes.DATE,
            defaultValue:null,
        },
        created_at:{
            type:DataTypes.DATE,
            defaultValue:null,
        },
        modified_at:{
            type:DataTypes.DATE,
            defaultValue:null,
        },
        deleted:{
            type:DataTypes.INTEGER(1),
            defaultValue:0,
        },
       
    },{
        tableName:'vtiger_xtransactionseriescf',
        timestamps:false,
        freezeTableName:true,
        indexes: [ 
        {fields: [ 'xtransactionseriesid' ] },
        {fields:['cf_xtransactionseries_status','cf_xtransactionseries_mark_as_default','cf_xtransactionseries_transaction_type']},
        ],
    });
    XSeriesCf.belongsTo(sequelize.models.XSeries,{
        foreignKey:'xtransactionseriesid',
        sourceKey:'xtransactionseriesid',
    });
    return XSeriesCf;
};